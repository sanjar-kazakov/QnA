.question
  h1= question.title
  p= question.body

  - if question.files.attached?
    - question.files.each do |file|
      div id="file_container_#{file.id}" class="file-container"
        - if file.representable?
          = link_to url_for(file) do
            = image_tag file.variant(resize_to_limit: [50, 50])
        - else
          p= link_to file.filename.to_s, url_for(file)

        - if is_author?(current_user, question)
          = button_to "Remove file",
                  attachment_path(file),
                  method: :delete,
                  data: { confirm: 'Are you sure?' },
                  remote: true
  .badge
    - if is_author?(current_user, question)
      - if badge&.badge_image&.attached?
        div id="badge_container_#{badge.id}"
          p Badge:
          = link_to url_for(badge.badge_image) do
            p= badge.name
            p= image_tag badge.badge_image.variant(resize_to_limit: [50, 50])
          = button_to "Remove badge",
                  badge_path(badge.id),
                  method: :delete,
                  data: { confirm: 'Are you sure?' },
                  remote: true
  .links
    - if question.links.any?
      p Links:
      ul
        - question.links.each do |link|
          - if link.url.include?("gist.github.com")
            - gist_id = link.url.split('/').last # Извлекаем gist_id из URL
            li= link_to link.name, link.url, class: 'gist-link', data: { gist_id: gist_id }
          - else
            li= link_to link.name, link.url

  p
  - if is_author?(current_user, question)
    = button_to 'Edit', '#', class: 'edit-question-link', data: { question_id: question.id }
    = button_to 'Delete', question_path(question), method: :delete

  = form_with model: question, local: false, class: 'hidden edit-question-form', html: { id: "edit-question-#{question.id}" } do |form|
    .question-errors
      = render 'shared/errors', resource: question

    .field
      p
        = form.label :title, 'Title'
        = form.text_field :title
      p
        = form.label :body, 'Body'
        = form.text_area :body
      - question.files.each do |file|
        = hidden_field_tag 'question[files][]', file.signed_id

      .file_fields
        p File:
        = form.label :files
        = form.file_field :files, multiple: true

      .badge_fields
        p Badge:
        = form.fields_for :badge, question.badge || question.build_badge do |badge_form|
          p
            = badge_form.label :name, 'Badge Name'
            = badge_form.text_field :name
          p
            = badge_form.label :badge_image, 'Upload Badge'
            = badge_form.file_field :badge_image

      - if question.links.any?
        p Links:
        = form.fields_for :links do |l|
          = render 'link_fields', f: l
      .links
        = link_to_add_association 'Add link', form, :links

    .actions
      = form.submit 'Save'